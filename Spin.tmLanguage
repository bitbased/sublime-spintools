<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleUUID</key>
	<string>E3BADC20-6B0E-11D9-9DC9-000D93589AF6</string>
	<key>comment</key>
	<string>
	todo:
		list comprehension / generator comprehension scope.

	</string>
	<key>fileTypes</key>
	<array>
		<string>spin</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!/.*\bspin[0-9.-]*\b</string>
	<key>foldingStartMarker</key>
	<string>^(PUB|Pub|pub|PRI|Pri|pri|DAT|Dat|dat|CON|Con|con|OBJ|Obj|obj|VAR|Var|var)\s+([.a-zA-Z0-9_ &lt;]+)\s*(\((.*)\))?\s*:|\{\s*$|\(\s*$|\[\s*$|^\s*"""(?=.)(?!.*""")</string>
	<key>foldingStopMarker</key>
	<string>^\s*$|^\s*\}|^\s*\]|^\s*\)|^\s*"""\s*$</string>
	<key>keyEquivalent</key>
	<string>^~P</string>
	<key>name</key>
	<string>Spin</string>
	<key>patterns</key>
	<array>

    <dict>
      <key>begin</key>
      <string>{</string>
      <key>captures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.comment.php</string>
        </dict>
      </dict>
      <key>end</key>
      <string>}(?!.*})</string>
      <key>name</key>
      <string>comment.block.spin</string>
    </dict>

		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.spin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(').*$\n?</string>
			<key>name</key>
			<string>comment.line.single-quote.spin</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i:(%[0-9A-Fa-f]*)L)</string>
			<key>name</key>
			<string>constant.numeric.integer.long.hexadecimal.spin</string>
		</dict>
    <dict>
      <key>match</key>
      <string>(?i:(\$[0-9A-Fa-f_]*)|(%[01_]*))</string>
      <key>name</key>
      <string>constant.numeric.integer.hexadecimal.spin</string>
    </dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(((\d+(\.(?=[^a-zA-Z])\d*)?|(?&lt;=[^0-9a-zA-Z])\.\d+)(e[\-\+]?\d+)?))J)</string>
			<key>name</key>
			<string>constant.numeric.complex.spin</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+\.\d*(e[\-\+]?\d+)?))(?=[^a-zA-Z])</string>
			<key>name</key>
			<string>constant.numeric.float.spin</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;=[^0-9a-zA-Z])(?i:(\.\d+(e[\-\+]?\d+)?))</string>
			<key>name</key>
			<string>constant.numeric.float.spin</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+e[\-\+]?\d+))</string>
			<key>name</key>
			<string>constant.numeric.float.spin</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:([0-9]+[0-9_]*)L)</string>
			<key>name</key>
			<string>constant.numeric.integer.long.decimal.spin</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([0-9]+[0-9_]*)</string>
			<key>name</key>
			<string>constant.numeric.integer.decimal.spin</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.global.spin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(global)\b</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.spin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.from.spin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(?:(import)|(from))\b</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>keywords that delimit flow blocks or alter flow from within a block</string>
			<key>match</key>
			<string>\b((?i:if)|(?i:repeat)|(?i:else)|(?i:elseif))\b</string>
			<key>name</key>
			<string>keyword.control.flow.spin</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>keyword operators that evaluate to True or False</string>
			<key>match</key>
			<string>\b(and|in|is|not|or)\b</string>
			<key>name</key>
			<string>keyword.operator.logical.spin</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.spin</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>keywords that haven't fit into other groups (yet).</string>
			<key>match</key>
			<string>\b(_CLKMODE|_clkmode|_clkMode|_Clkmode|_XINFREQ|_xinfreq|_xinFreq|_Xinfreq|ABORT|Abort|abort|QUIT|Quit|quit|NEXT|Next|next|WHILE|While|while|UNTIL|Until|until|FROM|From|from|TO|To|to|RETURN|Return|return|DIR[a-zA-Z](?=\[)|Dir[a-zA-Z](?=\[)|dir[a-zA-Z](?=\[)|OUT[a-zA-Z](?=\[)|Out[a-zA-Z](?=\[)|out[a-zA-Z](?=\[)|IN[a-zA-Z](?=\[)|In[a-zA-Z](?=\[)|in[a-zA-Z](?=\[))\b</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&lt;&gt;</string>
			<key>name</key>
			<string>invalid.deprecated.operator.spin</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&lt;\=|&gt;\=|\=\=|&lt;|&gt;|\!\=</string>
			<key>name</key>
			<string>keyword.operator.comparison.spin</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\+\=|-\=|:\=|:|\*\=|/\=|//\=|%\=|&amp;\=|\|\=|\^\=|&gt;&gt;\=|&lt;&lt;\=|\*\*\=</string>
			<key>name</key>
			<string>keyword.operator.assignment.augmented.spin</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\+|\-|\*|\*\*|/|//|&lt;&lt;|&gt;&gt;|&amp;|\||\^|~|\!</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.spin</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\=</string>
			<key>name</key>
			<string>keyword.operator.assignment.spin</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(class)\s+(?=[a-zA-Z_][a-zA-Z_0-9]*\s*\:)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.spin</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>entity.name.type.class.spin</string>
			<key>end</key>
			<string>\s*(:)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.class.begin.spin</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.old-style.spin</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#entity_name_class</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(class)\s+(?=[a-zA-Z_][a-zA-Z_0-9]*\s*\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.spin</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))\s*(?:(\:)|(.*$\n?))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.inheritance.end.spin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.class.begin.spin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-section-begin.spin</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.spin</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>contentName</key>
					<string>entity.name.type.class.spin</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_class</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.inheritance.begin.spin</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.class.inheritance.spin</string>
					<key>end</key>
					<string>(?=\)|:)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;=\(|,)\s*</string>
							<key>contentName</key>
							<string>entity.other.inherited-class.spin</string>
							<key>end</key>
							<string>\s*(?:(,)|(?=\)))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.spin</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(class)\s+(?=[a-zA-Z_][a-zA-Z_0-9])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.spin</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\()|\s*($\n?|#.*$\n?)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.inheritance.begin.spin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-inheritance.spin</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.spin</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>contentName</key>
					<string>entity.name.type.class.spin</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_function</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(PUB|Pub|pub|PRI|Pri|pri)\s+(?=[A-Za-z_][A-Za-z0-9_]*\s*\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.spin</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\)|\n)\s*(?:(\:|(?=\||'))|(.*$\n?))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.spin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.function.begin.spin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-section-begin.spin</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.spin</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>contentName</key>
					<string>entity.name.function.spin</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_function</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.spin</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function.parameters.spin</string>
					<key>end</key>
					<string>(?![a-zA-Z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyword_arguments</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.function.spin</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.parameters.spin</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(?:(,\s*)|(?=[\n\)]))</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(PUB|Pub|pub|PRI|Pri|pri)\s+(?=[A-Za-z_][A-Za-z0-9_]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.spin</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?![A-Za-z0-9_,])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.spin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-parameters.spin</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.spin</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>contentName</key>
					<string>entity.name.function.spin</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_function</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>


		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(?=@\s*[A-Za-z_][A-Za-z0-9_]*(?:[a-zA-Z_][a-zA-Z_0-9]*)*\s*\()</string>
			<key>comment</key>
			<string>a decorator may be a function call which returns a decorator.</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.spin</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.decorator.spin</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=(@)\s*[A-Za-z_][A-Za-z0-9_]*(?:[A-Za-z_][A-Za-z0-9_]*)*\s*\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.decorator.spin</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>entity.name.function.decorator.spin</string>
					<key>end</key>
					<string>(?=\s*\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.spin</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function.decorator.arguments.spin</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyword_arguments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>[(,]\s*(?=@[A-Za-z_][A-Za-z0-9_]*(?:[a-zA-Z_][a-zA-Z_0-9]*)*)</string>
			<key>contentName</key>
			<string>entity.name.function.decorator.spin</string>
			<key>end</key>
			<string>(?![@A-Za-z0-9_])</string>
			<key>name</key>
			<string>meta.function.decorator.spin</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=(@)\s*[A-Za-z_][A-Za-z0-9_]*([A-Za-z_][A-Za-z0-9_]*)*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.decorator.spin</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?![@A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\)|\])\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.begin.spin</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.function-call.arguments.spin</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.spin</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function-call.spin</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#keyword_arguments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*\s*\()</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.spin</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function-call.spin</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[A-Za-z_][A-Za-z0-9_]*)*\s*\()</string>
					<key>end</key>
					<string>(?=\s*\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.spin</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function-call.arguments.spin</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyword_arguments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*\s*\[)</string>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.spin</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.item-access.spin</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[A-Za-z_][A-Za-z0-9_]*)*\s*\[)</string>
					<key>end</key>
					<string>(?=\s*\[)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.spin</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.item-access.arguments.spin</string>
					<key>end</key>
					<string>(?=\])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\)|\])\s*(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.begin.spin</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.item-access.arguments.spin</string>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.spin</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.item-access.spin</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.spin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(def|lambda)\b</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.spin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\b(class|OBJ|Obj|obj|DAT|Dat|dat|CON|Con|con|VAR|Var|var)\b</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#line_continuation</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#language_variables</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(cnt|CNT|Cnt|CLKFREQ|ClkFreq|clkFreq|clkfreq|P8X32A|P8x32a|P8X32a|p8x32a|XTAL([0-9]+)|Xtal([0-9]+)|xtal([0-9]+)|PLL([0-9]+)X|PLL([0-9]+)x|Pll([0-9]+)x|pll([0-9]+)X|pll([0-9]+)x)\b</string>
			<key>name</key>
			<string>constant.language.spin</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_quoted_double</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#dotted_name</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>end</key>
			<string>(\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.begin.spin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.empty-list.spin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.end.spin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\[)(\s*(\]))\b</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.begin.spin</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.end.spin</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.structure.list.spin</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\[|\,)\s*(?![\],])</string>
					<key>contentName</key>
					<string>meta.structure.list.item.spin</string>
					<key>end</key>
					<string>\s*(?:(,)|(?=\]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.list.spin</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tuple.begin.spin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.empty-tuple.spin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tuple.end.spin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\()(\s*(\)))</string>
			<key>name</key>
			<string>meta.structure.tuple.spin</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.begin.spin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.empty-dictionary.spin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.end.spin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\{)(\s*(\}))</string>
			<key>name</key>
			<string>meta.structure.dictionary.spin</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.begin.spin</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.end.spin</string>
				</dict>
			</dict>

		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>builtin_exceptions</key>
		<dict>
			<key>match</key>
			<string>(?x)\b(
                (
                    Arithmetic|Assertion|Attribute|Buffer|EOF|Environment|FloatingPoint|IO|
                    Import|Indentation|Index|Key|Lookup|Memory|Name|NotImplemented|OS|Overflow|
                    Reference|Runtime|Standard|Syntax|System|Tab|Type|UnboundLocal|
                    Unicode(Encode|Decode|Translate)?|
                    Value|VMS|Windows|ZeroDivision
                )Error|
                ((Pending)?Deprecation|Runtime|Syntax|User|Future|Import|Unicode|Bytes)?Warning|
                (Base)?Exception|
                SystemExit|StopIteration|NotImplemented|KeyboardInterrupt|GeneratorExit
			)\b</string>
			<key>name</key>
			<string>support.type.exception.spin</string>
		</dict>
		<key>builtin_functions</key>
		<dict>
			<key>match</key>
			<string>(?x)\b(
                STRING|String|string|WAITCNT|Waitcnt|WaitCnt|waitcnt|waitCnt|COGNEW|CogNew|Cognew|cogNew|cognew|COGSTOP|CogStop|Cogstop|cogStop|cogstop|ABS|Abs|abs|MAX|Max|max|MIN|Min|min|NEG|Neg|neg|STRSIZE|StrSize|StrSIZE|strSIZE|strSize|Strsize|strsize|LONGFILL|LongFILL|longFILL|LongFill|longFill|Longfill|longfill|BYTEMOVE|ByteMove|ByteMOVE|byteMOVE|byteMove|Bytemove|bytemove|BYTEFILL|ByteFILL|ByteFill|Bytefill|byteFILL|ByteFILL|byteFill|bytefill|LOOKUPZ|LookUpz|lookUpz|LookUpZ|lookUpZ|LookUPZ|Lookupz|lookupz|CONSTANT|Constant|constant
			)\b(?=\s*\()</string>
			<key>name</key>
			<string>support.function.builtin.spin</string>
		</dict>
		<key>builtin_types</key>
		<dict>
			<key>match</key>
			<string>(?x)\b(
				LONG|Long|long|BYTE|Byte|byte|WORD|Word|word|RES|Res|res
			)\b</string>
			<key>name</key>
			<string>support.type.spin</string>
		</dict>
		<key>constant_placeholder</key>
		<dict>
			<key>match</key>
			<string>(?i:(\([a-z_]+\))?#?0?\-?[ ]?\+?([0-9]*|\*)(\.([0-9]*|\*))?[hL]?[a-z])</string>
			<key>name</key>
			<string>constant.other.placeholder.spin</string>
		</dict>
		<key>docstrings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(?=[uU]?[rR]?\{\{)</string>
					<key>end</key>
					<string>(?&lt;=\}\})</string>
					<key>name</key>
					<string>comment.block.spin</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_quoted_double</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>dotted_name</key>
		<dict>
			<key>begin</key>
			<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[A-Za-z_][A-Za-z0-9_]*)*)</string>
			<key>end</key>
			<string>(?![A-Za-z0-9_\.])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\.)(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#magic_function_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#magic_variable_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegal_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic_names</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin_functions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin_types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin_exceptions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegal_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#magic_function_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#magic_variable_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#language_variables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic_names</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>entity_name_class</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#illegal_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_names</string>
				</dict>
			</array>
		</dict>
		<key>entity_name_function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#magic_function_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#illegal_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_names</string>
				</dict>
			</array>
		</dict>
		<key>escaped_char</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.hex.spin</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.linefeed.spin</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.return.spin</string>
				</dict>
				<key>12</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.tab.spin</string>
				</dict>
				<key>13</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.vertical-tab.spin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.octal.spin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.newline.spin</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backlash.spin</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.double-quote.spin</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.single-quote.spin</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.bell.spin</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backspace.spin</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.formfeed.spin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\x[0-9A-F]{2})|(\\[0-7]{3})|(\\\n)|(\\\\)|(\\\")|(\\')|(\\a)|(\\b)|(\\f)|(\\n)|(\\r)|(\\t)|(\\v)</string>
		</dict>
		<key>escaped_unicode_char</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.unicode.16-bit-hex.spin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.unicode.32-bit-hex.spin</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.unicode.name.spin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\U[0-9A-Fa-f]{8})|(\\u[0-9A-Fa-f]{4})|(\\N\{[a-zA-Z ]+\})</string>
		</dict>
		<key>function_name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#magic_function_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#magic_variable_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_exceptions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_names</string>
				</dict>
			</array>
		</dict>
		<key>generic_names</key>
		<dict>
			<key>match</key>
			<string>[A-Za-z_][A-Za-z0-9_]*</string>
		</dict>
		<key>illegal_names</key>
		<dict>
			<key>match</key>
			<string>\b(and|as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|raise|return|try|with|yield)\b</string>
			<key>name</key>
			<string>invalid.illegal.name.spin</string>
		</dict>
		<key>keyword_arguments</key>
		<dict>
			<key>begin</key>
			<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(=)(?!=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.spin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.spin</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\s*(?:(?=$\n?|[\)\:]))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.parameters.spin</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>language_variables</key>
		<dict>
			<key>match</key>
			<string>\b(self|cls)\b</string>
			<key>name</key>
			<string>variable.language.spin</string>
		</dict>
		<key>line_continuation</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.continuation.line.spin</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unexpected-text.spin</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\)(.*)$\n?</string>
		</dict>
		<key>magic_function_names</key>
		<dict>
			<key>comment</key>
			<string>these methods have magic interpretation by spin and are generally called indirectly through syntactic constructs</string>
			<key>match</key>
			<string>(?x)\b(__(?:
						abs|add|AND|And|and|OR|NOT|Not|not|Or|or|call|cmp|coerce|complex|contains|del|delattr|
						delete|delitem|delslice|div|divmod|enter|eq|exit|float|
						floordiv|ge|get|getattr|getattribute|getitem|getslice|gt|
						hash|hex|iadd|iand|idiv|ifloordiv|ilshift|imod|imul|init|
						int|invert|ior|ipow|irshift|isub|iter|itruediv|ixor|le|len|
						long|lshift|lt|mod|mul|ne|neg|new|nonzero|oct|or|pos|pow|
						radd|rand|rdiv|rdivmod|repr|rfloordiv|rlshift|rmod|rmul|ror|
						rpow|rrshift|rshift|rsub|rtruediv|rxor|set|setattr|setitem|
						setslice|str|sub|truediv|unicode|xor
					)__)\b</string>
			<key>name</key>
			<string>support.function.magic.spin</string>
		</dict>
		<key>magic_variable_names</key>
		<dict>
			<key>comment</key>
			<string>magic variables which a class/module may have.</string>
			<key>match</key>
			<string>\b__(all|bases|class|debug|dict|doc|file|members|metaclass|methods|name|slots|weakref)__\b</string>
			<key>name</key>
			<string>support.variable.magic.spin</string>
		</dict>
		<key>regular_expressions</key>
		<dict>
			<key>comment</key>
			<string>Changed disabled to 1 to turn off syntax highlighting in “r” strings.</string>
			<key>disabled</key>
			<integer>0</integer>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp.spin</string>
				</dict>
			</array>
		</dict>
		<key>string_quoted_double</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.spin</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.spin</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.spin</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.spin</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.spin</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_quoted_double</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.spin</string>
	<key>uuid</key>
	<string>F23DB5B2-7D08-11D9-A709-000D93B6E43C</string>
</dict>
</plist>
